<%= raw @titre %>
<%= raw link_other_pages(@page_index, @projet) %>

Je vais essayer de faire de mon *pp_markdown* une application pour pouvoir me passer totalement de *phoenix_markdown* qui n'est pas à jour et qui m'oblige à passer par lui pour définir des variables (notamment la table `@table_vars`).

J'essaie de crée un fichier définissant une application dans le dossier path(pp_markdown_1.1).

Ça ne fonctionne pas comme ça, mais j’ai trouvé dans la documentation comment utiliser une dépendance sans pour autant créer vraiment une dépendance. Il suffit que je sauve *pp_markdown* sur github et que je mets dans les `depts` de mon path(mix.ex) :

~~~elixir
depts = [
	...
	{
		:pp_markdown, 
		git: 
			"https://github.com/PhilippePerret/pp_markdown.git"
	}
]
~~~

### Création du dépôt

Donc je vais sortir mon dossier de mon explorateur et l’enregistrer sur git.

…

J’ai créé le dépôt avec la même architecture que path(phoenix_markdown) :

~~~
pp_markdown.git
		|- lib/
				|- pp_markdown.ex
				|- pp_markdown/
						|-> engine.ex
		|- LICENSE
		|- mix.exs
		|- README.md
~~~

Et j’ai ajouté la dépendance ci-dessus au path(mix.exs) de mon application exploration courante.

Allez !… Je tente d’actualiser les dépendances.

…

Bingo ! 🥳 Il a bien chargé mon dossier depuis mon compte github.

### Configuration de l’application

Je vais maintenant voir si l’application `PPMarkdown` est maintenant connue de mon app et si `:pp_markdown` est sa marque.

…

Malheureusement, ça ne suffit pas, il en faut un peu plus. Je vais au moins créer le fichier path(mix.lock). Dans mon dossier path(pp_markdown) je joue :

~~~bash
mix deps.get
mix compile
~~~

Je n’oublie pas de faire un fichier path(.gitignore) pour ne pas verser dans mon compte gitub les dossier path(_build) et path(deps) et je `git commit` l’ensemble.

J’ajoute aussi par prudence un `override: true` dans ma dépendance de `earmark` pour que ma version dans l’application surclasse la version définie dans la dépendance :

~~~elixir
# in mix.exs

{:earmark, "~> 1.4", override: true},
~~~

Cette fois, je recharge les dépendances, je lance le serveur… et tout passe comme un charme ! 😎👍

### Suppression complète de phoenix-markdown

Malgré ses bons et loyaux services, je vais tenter de me débarrasser maintenant de la dépendance phoenix-markdown. Il faut que je pense cependant à voir ce que mon app définit pour lui dans mes configurations.

En fait, il faut que dans mon *Engine* je ne fasse plus appelle à `:phoenix_markdown` dans les appels à la configuration et que dans path(config.exs) je fasse pareil.

Comme j’ai oublié de gitignorer les dossier path(_build) et path(deps), je préfère refaire complètement mon dépôt github.

…

Sauf que maintenant, en rechargeant j’obtiens l’erreur :

~~~
* Getting pp_markdown (https://github.com/PhilippePerret/pp_markdown.git)
...
fatal: reference is not a tree: 9145a86b8cde0a64c9cc780623846e1b29c3c41e
** (Mix) Command "git --git-dir=.git checkout --quiet 9145a86b8cde0a64c9cc780623846e1b29c3c41e" failed
~~~

En fait, c’est path(mix.lock) qui retient les informations du dépôt et comme je viens de le refaire, il ne correspond plus. J’`rm mix.lock` (pour le détruire, donc), je relance… et ça passe comme un charme 🥳.

Et ma pseudo-dépendance fonctionne comme un charme !

Ben oui, mine de rien, je viens de créer ma première pseudo-dépendance ! 🥂 Je suis bientôt prêt à en créer peut-être une vraie. Mais il faudra commencer par tester celle-ci avant de la mettre à disposition.

### Colorisation syntaxique

Malgré mes déboires avec la colorisation syntaxique, je n’ai pas renoncé à cette fonctionnalité vraiment trop pratique. Je voudrais réessayer de l’utiliser, mais en faisant appel au « vrai » *colorateur*. 

Bon… j’ai réussi à faire passer *Makeup* et *makeup_elixir* (avec plein d’erreur), l’application démarre bien mais je me retrouve avec une page pas bonne du tout… En fait elle se trouve dans un `<pre><code>...</code></pre>` et apparait donc entière en dur…

Pour la suite, je vais implémenter les tests afin d’être sûr de ce qui sort de ce moteur de rendu.

<%= raw link_other_pages(@page_index, @projet) %>