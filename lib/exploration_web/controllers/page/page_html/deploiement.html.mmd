# DÃ©ploiement

Cette page dÃ©crit tout ce que j'ai fait pour dÃ©ployer cette application Phoenix/Elixir sur [alwaysdata](https://alwaysdata.com).

1. Je me connecte en SSH Ã  mon hÃ©bergement 

    `ssh <uname>@ssh-<app>.alwaydata.net`
1. â€¦ et je crÃ©e un nouveau dossier pour cette application
    `mkdir www/phoenix-exploration`
1. Je tÃ©lÃ©charge tous mes fichiers Phoenix dans ce dossier.
1. Dans mon tableau de bord, je crÃ©e un nouveau siteÂ :
    * Ã  l'adresse Â«Â www.atelier-icare.net/phoenix-explorationÂ Â»,
    * dans _configuration_, je choisis Â«Â _Elixir_Â Â»,
    * je mets en _commande_ 
        path(/home/icare/www/phoenix-exploration/_build/prod/rel/exploration/bin/exploration start),
    * je mets en _rÃ©pertoire de travail_ Â«Â www/phoenix-exploration/Â Â»,
    * en console, pour obtenir une *Secret Key Base*, je joue
        `mix phx.gen.secret` ,
    * je dÃ©finis les variables dâ€™*Environnement*Â :
      
      ~~~
      MIX_ENV=prod
      SECRET_KEY_BASE=<ma Secret Key Base obtenue ci-dessus>
      PHX_HOST=icare.alwaysdata.net
      PORT=8101 # RELEVER LE PORT DANS LA TABLEAU DE BORD
      SMTP_USERNAME=<mon user name>
      SMTP_PASSWORD=<nom mot de passe d'administrateur>
      # DATABASE_URL=icare_exploration # pas de base
      ~~~
    * je choisis la derniÃ¨re version d'Elixir (en tout cas celle avec laquelle j'ai crÃ©Ã© cette application),
    * je valide les informations (et je reviens donc Ã  l'onglet de mes sites).
1. Je modifie les configurations, et particuliÃ¨rement celle en productionÂ :
    * Dans <span class="path">config/config.exs</span>, Ã  la place deÂ :

      ~~~
      ...
      config :exploration, Exploration.Mailer, adapter: Swoosh.Adapters.Local

      ~~~

      â€¦ je mets :

      ~~~
      ...
      # Pour dÃ©finir ce qui concerne les mails
      # NE PAS OUBLIER DE CHANGER LE NOM DE L'APPLICATION (:exploration ci-dessous)
      # SI CE CODE EST COPIÃ‰
      config :exploration, Label.Mailer, 
        adapter: Swoosh.Adapters.SMTP,
        relay: System.get_env("SMTP_SERVER"),
        username: System.get_env("SMTP_USERNAME"),
        password: System.get_env("SMTP_PASSWORD"),
        port: 587,
        ssl: false,
        auth: :always,
        no_mx_lookups: true,
        retries: 1

      ~~~

    * Dans path(config/prod.exs), Ã  la place de :
      
      ~~~
      ...
      config :exploration, ExplorationWeb.Endpoint,
        cache_static_manifest: "priv/static/cache_manifest.json"
      ~~~

      â€¦ j'utilise :

      ~~~
      ...
      config :exploration, ExplorationWeb.Endpoint,
        url: [host: "icare.alwaysdata.net", path: "/phoenix-exploration", port: System.get_env("PORT")],
        http: [port: System.get_env("PORT")],
        server: true,
        debug_errors: false, # mettre true pour voir les erreurs en production
        cache_static_manifest: "priv/static/cache_manifest.json"
      ~~~

      > Noter notamment le `path` qu'il faut adapter Ã  l'application.
    * dans path(config/runtime.exs), Ã  la place de :

      ~~~
      host = System.get_env("PHX_HOST") || "example.com"
      ~~~

      â€¦ je mets :

      ~~~
      host = System.get_env("PHX_HOST") || "icare.alwaysdata.net"
      ~~~

      Ã€ la plce de :

      ~~~
      port = String.to_integer(System.get_env("PORT") || "4000")
      ~~~

      â€¦ je mets :

      ~~~
      port = String.to_integer(System.get_env("PORT"))
      ~~~

      > Je n'ai pas repris les informations concernant le mailer, mais c'est peut-Ãªtre ici qu'il faut les mettre, dans `if config_env() == :prod do`.
1. Il faut bien sÃ»r actualiser tous ces fichiers sur le site distant.
1. On peut passer vÃ©ritablement au dÃ©ploiementÂ :
    1. on se reconnecte en SSH s'il le faut, 
    1. on rejoint le dossier contenant le site (pour moi `cd www/phoenix-exploration/`),
    1. on joue `mix deps.get --only prod` (pour ne mettre que les dÃ©pendances utiles en production)
    1. <strike>on joue `MIX_ENV=prod mix compile`</strike> (pour compiler le site en production et crÃ©er la release)

      > ci-dessus, il y a une erreur (?) sur le site de Phoenix puisqu'ils disent de faire `mix compile` mais en fait il faut ajouter le code ci-dessous et faire une release.

    => Tout s'est bien passÃ©, la seule alerte concernant une dÃ©prÃ©cation de `Regex.regex?/1`.

    C'est bonÂ ! Normalement, c'est dÃ©ployÃ©â€¦
1. Je pourrais (peut-Ãªtre) jouer `MIX_ENV=prod mix phx.server` pour dÃ©marrer le site en production, mais sur Alwaysdata, je vais plutÃ´t dans mon tableau de bord, rubrique Â«Â SitesÂ Â» et je clique sur le bouton Ã  droite pour dÃ©marrer le site d'exploration de Phoenix.
1. Et je me rends Ã  l'adresse path(https://www.atelier-icare.net/phoenix-exploration/).

    Et Ã§a ne fonctionne pasâ€¦

1. ChatGPT me dit d'ajouter dans path(mix.exs) :

    ~~~
    def project do
      [
        ...      
        releases: [
          exploration: [ # ATTENTION NOM APP ICI
            include_executables_for: [:unix],
            applications: [runtime_tools: :permanent]
          ]
        ]
      ]
    ~~~

1. J'ajoute un `<base href={~p"/"}>` dans le `<head>` de path(root.html.heex).
1. Puis je joue `MIX_ENV=prod mix release`.

    => Et je me retrouve encore avec le mÃªme erreur, un `GET "/phoenix-exploration"` qui n'est pas dÃ©fini, comme si l'application Ã©tait lancÃ©e depuis path(www.atelier-icare.net) alors qu'elle est lancÃ©e depuis path(www.atelier-icare.net/exploration). VOIR CI-DESSOUS.

1. Car lÃ , **il ne faut pas oublier, sur ALWAYSDATA, de cocher la case "Exclure le chemin" dans l'onglet "AVANCÃ‰"** des rÃ©glages de l'application.
1. Je coche donc la case "Exclure le chemin" et je valide.
1. Et je relance le serveur.

    Et cette fois, Ã§a fonctionne ! ðŸ¥³ðŸ˜Ž


## Actualisation du site

Tous les sites parlent du dÃ©ploiement mais jamaisâ€¦ de l'actualisation du site, alors qu'il parait que c'est une force de Phoenix, de pouvoir s'actualiser _Ã  chaud_. Mais je ne sais pas encore trop comment.

Pour le moment, lorsque je dois actualiser l'application, je procÃ¨de ainsiÂ :

1. Je change le numÃ©ro de version dans path(mix.exs). En fonction de l'importance de l'actualisation, je change le premier (actualisation majeure), le seconde (actualisation mineure) ou le troisiÃ¨me (juste une petite correction).
1. J'actualise tous les fichiers distant (personnellement, j'utilise [le package SFTP](https://codexns.io/products/sftp_for_sublime) de Sublime Text, mais je viens de passer Ã  Visual Code Studio donc je trouverai une solution pour cet IDE bientÃ´t â€”Â pour le moment, il ne semble exister une solution que pour du FTP, pas du FTP sÃ©curisÃ©).
2. Je rejoins mon hÃ©bergement par SSH (`ssh <username>@ssh-<app>.alwaysdata.net`) avec une clÃ© RSA qui me dispense d'entrer des informations d'identification.
3. Je rejoins mon dossier (par exemple, pour cette application _Exploration_, je fais `cd www/phoenix-exploration`).
4. Je demande une nouvelle release (`MIX_ENV=prop mix release`).
5. Une fois qu'elle est faite, je rejoins mon tableau de bord, onglet Â«Â SitesÂ Â» et je redÃ©marre mon application.

  > Peut-Ãªtre que je pourrais redÃ©marrer directement en SSH, il faudra que j'essaie, la prochaine fois.