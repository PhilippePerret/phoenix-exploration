load(_entete)

AprÃ¨s avoir passÃ© un moment Ã  travailler sur lâ€™extension [pp_markdown]<%= ~p"/explorer" <> "/markdown" %> je reprends cette application â€” ou plutÃ´t ce site qui doit rÃ©volution lâ€™autoÃ©dition ğŸ¤£ğŸ¤ª â€” pour finaliser ses premiÃ¨res pages.

## DÃ©ploiement

Dâ€™abord, je procÃ¨de Ã  son dÃ©ploiement, en sachant que par rapport Ã  ce site, la grande diffÃ©rence est quâ€™on a ici une base de donnÃ©es (qui va Ãªtre hyper active). Et, comme je lâ€™anticipais, Ã§a coince tout de suite Ã  ce niveau, car la dÃ©finition : 

~~~bash
DATABASE_URL=icare_ldq_label
~~~

â€¦ que jâ€™avais mise dans la configuration du site, Ã©videmment, ne fonctionne pas. Mais en me rÃ©fÃ©rant au fichier de configuration de Phoenix, je trouve dans p(config/prod.exs) la donnÃ©e quâ€™il attend. En lâ€™occurrence, Ã§a doit avoir cette formeÂ : 

~~~bash
DATABASE_URL=ecto://XXXX:YYYY@postgresql-icare.alwaysdata.net/icare_ldq

oÃ¹ :

	XXXX est l'identifiant
	YYYY est le mot de passe
~~~

Jâ€™ai crÃ©Ã© sur le site la base `icare_ldq_prod` mais je ne sais pas encore si Ã§a va fonctionner.







### Domaines

Jâ€™achÃ¨te aussi chez Alwaysdata les deux domaines qui vont Ãªtre utilisÃ©s pour ce label, Ã  savoir : 

* path([https://www.lecture-de-qualite.fr](https://www.lecture-de-qualite.fr))
* path([https://www.lecture-de-qualite.net](https://www.lecture-de-qualite.net))

Mais lorsque je les utilise, quelques temps aprÃ¨s les avoir crÃ©Ã©s, ils sâ€™affichent mais les *assets* ne fonctionnent pasÂ :

* aucune feuille de style nâ€™est active,
* la police principale (NanumMyeongjo) nâ€™est pas utilisÃ©e (peut-Ãªtre liÃ© au problÃ¨me prÃ©cÃ©dent).

Jâ€™essaie dâ€™ajouter `<base href={~p"/"} />` dans le `<head>` mais Ã§a ne change rien.

Je vais essayer, juste pour voir, de le mettre Ã  `<base href="www.lecture-de-qualite.fr/" />` juste pour voir (car je ne pourrai pas le garder en dÃ©veloppement. Maisâ€¦ je suis bÃªte, il suffit que jâ€™utilise `get_env` pour savoir quoi mettreâ€¦ Donc, dans mon root (path(ldq_web/components/layouts/root.html.heex)), je vais ajouter :

~~~html
<%= if get_env() == :prod %>
  
<% end %>
~~~

Mais en fait, avec lâ€™aide de ChatGPT, je rÃ©sous le problÃ¨me en mettant dans mon fichier path(config/prod.exs) une meilleure valeur de Endpoint : 

~~~elixir
config :ldq, LdQWeb.Endpoint,
  url: [host: "www.lecture-de-qualite.fr", port: 8103],

~~~

Et Ã§a marche !

Ouiâ€¦ enfinâ€¦ presqueâ€¦ Parce que jâ€™ai un problÃ¨me dÃ¨s que je veux mâ€™inscrireâ€¦ Ã‡a tourne en boucle et je ne peux pas remplir le formulaire dâ€™inscription.

## Mieux dÃ©ployer

En fait, je mâ€™aperÃ§ois en relisant la documentation du dÃ©ploiement par release que je nâ€™ai fait que la moitiÃ© des chosesâ€¦ Avant de jouer `MIX_ENV=prod mix release` jâ€™ai plusieurs choses Ã  prÃ©parer pour pouvoir utiliser la base de donnÃ©es.

Et puis il faudra que je vÃ©rifie aussi si mon gestionnaire de mails est bien rÃ©glÃ© pour lâ€™application en mode production.

Je vais mâ€™appuyer sur le [documentation sur les releases](https://hexdocs.pm/phoenix/releases.html#releases-assemble).

Je vais tout recommencer en crÃ©ant une nouvelle release.

1. Je dois gÃ©nÃ©rer dâ€™abord les scripts qui vont faire les migrations, etc. avec 
     `mix phx.gen.release`
     => Ã§a crÃ©e notamment le fichier p(lib/ldq/release.ex).
2. Dans path(mix.exs) je mets le numÃ©ro de version Ã  Â«Â 0.2.8Â Â» (il Ã©tait Ã  Â«Â 0.2.7.Â Â»).
3. Je `git commit` puis je tÃ©lÃ©verse les fichiers sur mon hÃ©bergement alwaysdata.
4. Je me connecte en SSH Ã  mon compte avec
     `ssh moncompte@ssh-moncompte.alwaysdata.net`
5. et je rejoins le dossier de mon application.
6. Je charge les dÃ©pendances utiles en mode production avec
     `mix deps.get -only prod`
7. Je compile avec `MIX_ENV=prod mix compile`
     => Â«Â Generated ldq appÂ Â»
8. Je compile les assets avec `MIX_ENV=prod mix assets.deploy`
     => crÃ©e le fichier digest Ã  path(priv/static).
9. Et maintenant je crÃ©e la release avec `MIX_ENV=prod mix release`
10. Ensuite, je dois jouer les migrations (ce sera Ã  faire chaque fois quâ€™il y aura de nouvelles migrations Ã  jouer). Il faut dâ€™abord que jâ€™`exporte`  `DATABASE_URL` et la clÃ© `SECRET_KEY_BASE` et ensuite je peux jouer la commande. Ã‡a donnera (le nom de la base â€”Â Â«Â icare_basenameÂ Â» ci-dessousÂ â€” doit correspondre exactement)Â :

     ~~~bash
     export DATABASE_URL=ecto://moncpt:pwd@postgresql-moncpt.alwaysdata.net/icare_basename
     export SECRET_KEY_BASE=xxxxxxxxxxx
     _build/prod/rel/ldq/bin/ldq eval "LdQ.Release.migrate()"
     ~~~

     => Et je vois les migrations se crÃ©er.
11. Je vais redÃ©marrer le site (comme je lâ€™ai dit plus haut, Ã§a ne semble pas nÃ©cessaire, mais lÃ  je prÃ©fÃ¨re le faire) pour essayer Ã  nouveau de mâ€™inscrire.

â€¦

Malheureusement, jâ€™ai toujours un problÃ¨me lorsque jâ€™essaie de mâ€™inscrire.

Piste : voir si le nom de la base de donnÃ©es et bien le mÃªme dans mes donnÃ©es (car jâ€™ai peut-Ãªtre mis `icare_ldq_prod`â€¦)

â€¦ 

Non, câ€™est bon.

AprÃ¨s consultation de mes logs, je vois quâ€™il manque le certificat pour la connexion SSL avec la base de donnÃ©es. Avec lâ€™aide de ChatGPT, je rejoins, dans mon tableau de bord, la section path(Certificats SSL/url.de.mon.site/) et je tÃ©lÃ©charge le Â«Â certificat intermÃ©diaireÂ Â» que je nomme path(certificat.pem) Ã  la racine du site.

Dans la configuration path(runtime.exs), jâ€™ajoute :

~~~elixir
# in config/runtime.exs

  config :ldq, LdQ.Repo,
  	...
    ssl: true,
    cacertfile: "/home/<monid>/www/label/certificat.pem"
~~~

Je crÃ©e une nouvelle release (tÃ©lÃ©versement, etc.) et jâ€™essaie Ã  nouveau.

â€¦

Ã‡a ne fonctionne toujours pasâ€¦ Mais dans les logs je vois une nouvelle erreur qui me conseille de rÃ©gler le `:check_origin` de ma config `LdQWeb.Endpoint` :

~~~elixir
# in config/prod.exs

config :ldq, LdQWeb.Endpoint,
  url: [host: "www.lecture-de-qualite.net", port: 8103],
  check_origin: [														# +
  	"https://www.lecture-de-qualite.net", 	# +
  	"https://www.lecture-de-qualite.fr"			# +
  	]																				# +

~~~

> Câ€™est quand mÃªme incroyablement compliquÃ© (et tout simple en mÃªme tempsâ€¦)

Ce sera ma version Â«Â 0.2.12Â Â». Je ne sais plus si je lâ€™ai dit, mais pour la clartÃ© (et savoir surtout si le site redÃ©marrait seul parfois) jâ€™Ã©cris cette version dans lâ€™entÃªte, de travail. Pour faire Ã§a, jâ€™ai simplement, dans p(config/config.exs) ajoutÃ© la ligne : 

~~~elixir
# in config/config.exs

config :ldq, 
	:app_version, 
	LdQ.MixProject.project()[:version]
~~~

â€¦ et ensuite, dans path(root.html.heex) il suffit que jâ€™ajoute :

~~~html
<header>
  ...
  <div id="app-version">
    <%= Application.get_env(:ldq, :app_version) %>
  </div>
~~~

â€¦ et je stylise la balise avec : 

~~~css
header div#app-version {
  position: absolute;
  left: -9pt;
  top: 16pt;
  color: white;
  font-size: 9pt;
  z-index: 1;
  letter-spacing: 3px;
  rotate: 270deg;
}
~~~

Je `mix release` pour produire la nouvelle version. Cette fois, jâ€™attends un peu pour voir si le site va redÃ©marrer tout seul avec la nouvelle version Â«Â 0.2.12Â Â».

â€¦

MÃªme en rechargeant plusieurs fois la page (en forÃ§ant le rechargement), Ã§a ne passe pas Ã  la version suivante. Je redÃ©marre le serveur.

â€¦

BingoÂ ! ğŸ¥³ Cette fois je peux rejoindre le formulaire dâ€™inscription sans problÃ¨me. Mais une erreur sâ€™affiche (trop briÃ¨vement) lorsque je soumets le formulaire. Je vais aller voir dans les logs ce qui se passe.

> Il faudra bien que je pense Ã  ajouter toutes ces Ã©tapes dans la page dÃ©ploiement de ce site dâ€™exploration.

Je re-vÃ©rifie les logsâ€¦



load(_pied_de_page)